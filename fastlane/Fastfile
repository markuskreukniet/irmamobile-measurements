lane :alpha_resign do
  apks = Dir['../build/app/outputs/apk/alpha/release/*.apk']
  apks.each do |apk|
    sh("apksigner", "sign",
      "--ks", ENV["ANDROID_SIGN_KEYSTORE"],
      "--ks-key-alias", ENV["ANDROID_SIGN_KEY_ALIAS"],
      "--ks-pass", "pass:"+ENV["ANDROID_SIGN_STORE_PASSWORD"],
      "--key-pass", "pass:"+ENV["ANDROID_SIGN_KEY_PASSWORD"],
      apk)
  end
end

lane :beta_resign do
  apks = Dir['../build/app/outputs/apk/beta/release/*.apk']
  apks.each do |apk|
    sh("apksigner", "sign",
      "--ks", ENV["ANDROID_SIGN_KEYSTORE"],
      "--ks-key-alias", ENV["ANDROID_SIGN_KEY_ALIAS"],
      "--ks-pass", "pass:"+ENV["ANDROID_SIGN_STORE_PASSWORD"],
      "--key-pass", "pass:"+ENV["ANDROID_SIGN_KEY_PASSWORD"],
      apk)
  end
end

lane :alpha_build do
  alpha_android_build()
  alpha_ios_build()
end

lane :beta_build do
  beta_android_build()
  beta_ios_build()
end

lane :alpha_android_build do
  update_schemes_alpha()
  build_irmagobridge_android()
  commit = last_git_commit()
  write_sentrydata(
    dsn: ENV["SENTRY_DSN_ALPHA"],
    version: commit[:commit_hash]
  )
  Dir.chdir("..") do
    sh("flutter", "build", "apk", "--split-per-abi", "--flavor", "alpha", "--release")
  end
end

lane :beta_android_build do
  update_schemes_beta()
  build_irmagobridge_android()
  commit = last_git_commit()
  write_sentrydata(
    dsn: ENV["SENTRY_DSN_PROD"],
    version: commit[:commit_hash]
  )
  Dir.chdir("..") do
    sh("flutter", "build", "apk", "--split-per-abi", "--flavor", "beta", "--release")
  end
end

lane :alpha_ios_build do
  update_schemes_alpha()
  build_irmagobridge_ios()
  update_app_identifier(
    xcodeproj: "ios/Runner.xcodeproj",
    plist_path: "Runner/Info.plist",
    app_identifier: "foundation.privacybydesign.irmamob.alpha"
  )
  update_info_plist(
    xcodeproj: "ios/Runner.xcodeproj",
    plist_path: "Runner/Info.plist",
    display_name: "IRMA 2020"
  )
  commit = last_git_commit()
  write_sentrydata(
    dsn: ENV["SENTRY_DSN_ALPHA"],
    version: commit[:commit_hash]
  )
  Dir.chdir("..") do
    sh("flutter", "build", "ios", "--release", "--no-codesign")
  end
end

lane :beta_ios_build do 
  update_schemes_alpha()
  build_irmagobridge_ios()
  update_app_identifier(
    xcodeproj: "ios/Runner.xcodeproj",
    plist_path: "Runner/Info.plist",
    app_identifier: "foundation.privacybydesign.irmamob"
  )
  update_info_plist(
    xcodeproj: "ios/Runner.xcodeproj",
    plist_path: "Runner/Info.plist",
    display_name: "IRMA"
  )
  commit = last_git_commit()
  write_sentrydata(
    dsn: ENV["SENTRY_DSN_PROD"],
    version: commit[:commit_hash]
  )
  Dir.chdir("..") do
    sh("flutter", "build", "ios", "--release", "--no-codesign")
    sh("xcodebuild", "-workspace", "./ios/Runner.xcworkspace", "-scheme", "Runner", "-sdk", "iphoneos", "-configuration", "Release", "archive", "-archivePath", "./ios/build/Runner.xcarchive")
    sh("xcodebuild", "-exportArchive", "-archivePath", "./ios/build/Runner.xcarchive", "-exportOptionsPlist", "./ios/AppStoreExportOptions.plist", "-exportPath", "./ios/build/AppStore")
    # xcrun altool --upload-app --type ios --file ./ios/build/AppStore/Runner.ipa --username "info@example.com"
  end
end

lane :build_irmagobridge_android do
  Dir.chdir("..") do
    sh("gomobile", "bind", "-target", "android", "-o", "android/irmagobridge/irmagobridge.aar", "github.com/privacybydesign/irmamobile/irmagobridge")
  end
end

lane :build_irmagobridge_ios do
  Dir.chdir("..") do
    sh("gomobile", "bind", "-target", "ios", "-o", "ios/Runner/Irmagobridge.framework", "github.com/privacybydesign/irmamobile/irmagobridge")
  end
end

lane :update_schemes_alpha do
  Dir.chdir("../irma_configuration/pbdf") do
    sh("git", "checkout", "master")
    sh("git", "pull", "-f")
  end
  Dir.chdir("../irma_configuration/irma-demo") do
    sh("git", "checkout", "master")
    sh("git", "pull", "-f")
  end
end

lane :update_schemes_beta do
  Dir.chdir("../irma_configuration/pbdf") do
    sh("git", "checkout", "master")
    sh("git", "pull", "-f")
  end
  Dir.chdir("../irma_configuration/irma-demo") do
    sh("git", "checkout", "master")
    sh("git", "pull", "-f")
  end
end

lane :write_sentrydata do |options|
  erb(
    template: "fastlane/sentry_dsn.erb",
    destination: "lib/sentry_dsn.dart",
    placeholders: {
      :dsn => options[:dsn],
      :version => options[:version]
    }
  )
end
